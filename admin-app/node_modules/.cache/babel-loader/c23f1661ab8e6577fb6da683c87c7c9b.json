{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { authConstants } from \"./constants\";\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post('/admin/signin', { ...user\n    });\n\n    if (res.status == 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('token', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = localStorage.getItem('user');\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: 'Failed to login'\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/Work/Internship/test1/admin-app/src/actions/auth.action.js"],"names":["axios","authConstants","login","user","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","isUserLoggedIn","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,KAAK,GAAGC,IAAD,IAAS;AAEzB,SAAO,MAAOC,QAAP,IAAoB;AAEvBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,aAAa,CAACK;AAArB,KAAD,CAAR;AAEA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAW,eAAX,EAA4B,EAC1C,GAAGL;AADuC,KAA5B,CAAlB;;AAIA,QAAII,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAsB;AAClB,YAAM;AAAEC,QAAAA,KAAF;AAASP,QAAAA;AAAT,UAAkBI,GAAG,CAACI,IAA5B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAA9B;AACAC,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,aAAa,CAACe,aADf;AAELC,QAAAA,OAAO,EAAE;AACLP,UAAAA,KADK;AACEP,UAAAA;AADF;AAFJ,OAAD,CAAR;AAMH,KAVD,MAUK;AACD,UAAGI,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBL,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEJ,aAAa,CAACiB,aADf;AAELD,UAAAA,OAAO,EAAE;AAACE,YAAAA,KAAK,EAAEZ,GAAG,CAACI,IAAJ,CAASQ;AAAjB;AAFJ,SAAD,CAAR;AAIH;AACJ;AAGJ,GA5BD;AA6BH,CA/BM;AAiCP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO,MAAMhB,QAAN,IAAkB;AACrB,UAAMM,KAAK,GAAGE,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGX,KAAH,EAAS;AACL,YAAMP,IAAI,GAAGS,YAAY,CAACS,OAAb,CAAqB,MAArB,CAAb;AACAjB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,aAAa,CAACe,aADf;AAELC,QAAAA,OAAO,EAAE;AACLP,UAAAA,KADK;AACEP,UAAAA;AADF;AAFJ,OAAD,CAAR;AAMH,KARD,MAQK;AACDC,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,aAAa,CAACiB,aADf;AAELD,QAAAA,OAAO,EAAE;AAACE,UAAAA,KAAK,EAAE;AAAR;AAFJ,OAAD,CAAR;AAIH;AACJ,GAhBD;AAiBH,CAlBM","sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { authConstants } from \"./constants\";\r\n\r\nexport const login =(user) =>{\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({type: authConstants.LOGIN_REQUEST});\r\n\r\n        const res = await axios.post('/admin/signin', {\r\n            ...user\r\n        })\r\n\r\n        if (res.status == 200){\r\n            const { token, user } = res.data;\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('token', JSON.stringify(user));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        }else{\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: {error: res.data.error}\r\n                });\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            const user = localStorage.getItem('user');\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGIN_FAILURE,\r\n                payload: {error: 'Failed to login'}\r\n            });\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}